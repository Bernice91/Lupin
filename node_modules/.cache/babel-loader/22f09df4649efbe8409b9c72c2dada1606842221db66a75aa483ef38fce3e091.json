{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lupin\\\\src\\\\components\\\\Cardslider.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, CardContent, Typography, Button, Box } from '@mui/material';\nimport { ArrowBack, ArrowForward } from '@mui/icons-material';\n\n// Sample data for cards\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cards = [{\n  id: 1,\n  title: 'Card 1',\n  description: 'This is the first card'\n}, {\n  id: 2,\n  title: 'Card 2',\n  description: 'This is the second card'\n}, {\n  id: 3,\n  title: 'Card 3',\n  description: 'This is the third card'\n}, {\n  id: 4,\n  title: 'Card 4',\n  description: 'This is the fourth card'\n}, {\n  id: 5,\n  title: 'Card 5',\n  description: 'This is the fifth card'\n}];\nconst CardSlider = () => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  // Move to the next card\n  const nextCard = () => {\n    if (currentIndex < cards.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n    } else {\n      setCurrentIndex(0); // Loop back to the first card\n    }\n  };\n\n  // Move to the previous card\n  const prevCard = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    } else {\n      setCurrentIndex(cards.length - 1); // Loop back to the last card\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '80%',\n      margin: 'auto',\n      padding: 4,\n      textAlign: 'center',\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: prevCard,\n      variant: \"contained\",\n      color: \"primary\",\n      sx: {\n        position: 'absolute',\n        left: '10px',\n        top: '50%',\n        transform: 'translateY(-50%)'\n      },\n      children: /*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 345,\n        margin: '0 auto',\n        padding: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          children: cards[currentIndex].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: cards[currentIndex].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 345,\n        margin: '0 auto',\n        padding: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          children: cards[currentIndex].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: cards[currentIndex].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: nextCard,\n      variant: \"contained\",\n      color: \"primary\",\n      sx: {\n        position: 'absolute',\n        right: '10px',\n        top: '50%',\n        transform: 'translateY(-50%)'\n      },\n      children: /*#__PURE__*/_jsxDEV(ArrowForward, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(CardSlider, \"tusBbsahUVevXfyh6oH5R6YDC9Q=\");\n_c = CardSlider;\nexport default CardSlider;\nvar _c;\n$RefreshReg$(_c, \"CardSlider\");","map":{"version":3,"names":["React","useState","Card","CardContent","Typography","Button","Box","ArrowBack","ArrowForward","jsxDEV","_jsxDEV","cards","id","title","description","CardSlider","_s","currentIndex","setCurrentIndex","nextCard","length","prevCard","sx","width","margin","padding","textAlign","display","flexDirection","children","onClick","variant","color","position","left","top","transform","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","component","right","_c","$RefreshReg$"],"sources":["D:/Lupin/src/components/Cardslider.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, CardContent, Typography, Button, Box } from '@mui/material';\r\nimport { ArrowBack, ArrowForward } from '@mui/icons-material';\r\n\r\n// Sample data for cards\r\nconst cards = [\r\n  { id: 1, title: 'Card 1', description: 'This is the first card' },\r\n  { id: 2, title: 'Card 2', description: 'This is the second card' },\r\n  { id: 3, title: 'Card 3', description: 'This is the third card' },\r\n  { id: 4, title: 'Card 4', description: 'This is the fourth card' },\r\n  { id: 5, title: 'Card 5', description: 'This is the fifth card' },\r\n];\r\n\r\nconst CardSlider = () => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  // Move to the next card\r\n  const nextCard = () => {\r\n    if (currentIndex < cards.length - 1) {\r\n      setCurrentIndex(currentIndex + 1);\r\n    } else {\r\n      setCurrentIndex(0); // Loop back to the first card\r\n    }\r\n  };\r\n\r\n  // Move to the previous card\r\n  const prevCard = () => {\r\n    if (currentIndex > 0) {\r\n      setCurrentIndex(currentIndex - 1);\r\n    } else {\r\n      setCurrentIndex(cards.length - 1); // Loop back to the last card\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '80%', margin: 'auto', padding: 4, textAlign: 'center', display:'flex', flexDirection:'row' }}>\r\n      {/* Navigation buttons */}\r\n      <Button onClick={prevCard} variant=\"contained\" color=\"primary\" sx={{ position: 'absolute', left: '10px', top: '50%', transform: 'translateY(-50%)' }}>\r\n        <ArrowBack />\r\n      </Button>\r\n\r\n      {/* Card Display */}\r\n      <Card sx={{ maxWidth: 345, margin: '0 auto', padding: 2 }}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            {cards[currentIndex].title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {cards[currentIndex].description}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n      <Card sx={{ maxWidth: 345, margin: '0 auto', padding: 2 }}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            {cards[currentIndex].title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {cards[currentIndex].description}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Navigation buttons */}\r\n      <Button onClick={nextCard} variant=\"contained\" color=\"primary\" sx={{ position: 'absolute', right: '10px', top: '50%', transform: 'translateY(-50%)' }}>\r\n        <ArrowForward />\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CardSlider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}